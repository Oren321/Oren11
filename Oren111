local ReplicatedStorage = game:GetService("ReplicatedStorage")
local petsFolder = workspace.__THINGS.Pets
local breakablesFolder = workspace.__THINGS.Breakables

local petIDs = {}
local pinataID = nil

for _, pet in pairs(petsFolder:GetChildren()) do
    if pet:IsA("Model") then
        table.insert(petIDs, pet.Name)
    end
end

local function attackTarget(targetID)
    ReplicatedStorage.Network.Breakables_PlayerDealDamage:FireServer(targetID)
    for i = 1, math.min(5, #petIDs) do
        ReplicatedStorage.Network.Breakables_JoinPetBulk:FireServer({[1] = {[petIDs[i]] = targetID}})
    end
end

while true do
    local bossFound = false
    local blackFound = false
    local targetID = nil

    if pinataID then
        attackTarget(pinataID)
        task.wait(0.5)
    else
        for _, breakable in pairs(breakablesFolder:GetChildren()) do
            if breakable:IsA("Model") then
                local attributes = breakable:GetAttributes()
                for _, value in pairs(attributes) do
                    local attr = tostring(value)
                    if attr == "Pinata Boss" then
                        pinataID = tonumber(breakable.Name)
                        bossFound = true
                        break
                    elseif attr == "Black Lucky Block" then
                        targetID = tonumber(breakable.Name)
                        blackFound = true
                        break
                    end
                end
                if bossFound then break end
            end
        end

        if not bossFound and blackFound and targetID then
            attackTarget(targetID)
            task.wait(0.5)
        end
    end
    task.wait(0.1)
end
